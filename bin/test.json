{
  "permissions": {
    "canRead": true,
    "canWrite": true
  },
  "processGroupFlow": {
    "id": "ccc69044-0168-1000-93ed-04661d1fdc08",
    "uri": "http://localhost:8080/nifi-api/flow/process-groups/ccc69044-0168-1000-93ed-04661d1fdc08",
    "parentGroupId": "cc6f6e50-0168-1000-0261-75adc2c330e5",
    "breadcrumb": {
      "id": "ccc69044-0168-1000-93ed-04661d1fdc08",
      "permissions": {
        "canRead": true,
        "canWrite": true
      },
      "breadcrumb": {
        "id": "ccc69044-0168-1000-93ed-04661d1fdc08",
        "name": "AMSLOG_Ingest"
      },
      "parentBreadcrumb": {
        "id": "cc6f6e50-0168-1000-0261-75adc2c330e5",
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "breadcrumb": {
          "id": "cc6f6e50-0168-1000-0261-75adc2c330e5",
          "name": "NiFi Flow"
        }
      }
    },
    "flow": {
      "processGroups": [],
      "remoteProcessGroups": [],
      "processors": [
        {
          "revision": {
            "clientId": "cd5c911e-0168-1000-42d4-dec907f35916",
            "version": 2
          },
          "id": "cdaf9153-0168-1000-9c14-f4f1f7784ad4",
          "uri": "http://localhost:8080/nifi-api/processors/cdaf9153-0168-1000-9c14-f4f1f7784ad4",
          "position": {
            "x": 471.00000473269847,
            "y": 302.99996714736744
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "cdaf9153-0168-1000-9c14-f4f1f7784ad4",
            "parentGroupId": "ccc69044-0168-1000-93ed-04661d1fdc08",
            "position": {
              "x": 471.00000473269847,
              "y": 302.99996714736744
            },
            "name": "ListFTP",
            "type": "org.apache.nifi.processors.standard.ListFTP",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.8.0"
            },
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are received are routed to success",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": true,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": true,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "listing-strategy": "timestamps",
                "Hostname": null,
                "Port": "21",
                "Username": null,
                "Password": null,
                "Remote Path": ".",
                "Distributed Cache Service": null,
                "Search Recursively": "false",
                "File Filter Regex": null,
                "Path Filter Regex": null,
                "Ignore Dotted Files": "true",
                "Remote Poll Batch Size": "5000",
                "Connection Timeout": "30 sec",
                "Data Timeout": "30 sec",
                "Connection Mode": "Passive",
                "Transfer Mode": "Binary",
                "proxy-configuration-service": null,
                "Proxy Type": "DIRECT",
                "Proxy Host": null,
                "Proxy Port": null,
                "Http Proxy Username": null,
                "Http Proxy Password": null,
                "Internal Buffer Size": "16KB",
                "target-system-timestamp-precision": "auto-detect",
                "et-state-cache": null,
                "et-time-window": "3 hours",
                "et-initial-listing-target": "all"
              },
              "descriptors": {
                "listing-strategy": {
                  "name": "listing-strategy",
                  "displayName": "Listing Strategy",
                  "description": "Specify how to determine new/updated entities. See each strategy descriptions for detail.",
                  "defaultValue": "timestamps",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Tracking Timestamps",
                        "value": "timestamps",
                        "description": "This strategy tracks the latest timestamp of listed entity to determine new/updated entities. Since it only tracks few timestamps, it can manage listing state efficiently. However, any newly added, or updated entity having timestamp older than the tracked latest timestamp can not be picked by this strategy. For example, such situation can happen in a file system if a file with old timestamp is copied or moved into the target directory without its last modified timestamp being updated."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Tracking Entities",
                        "value": "entities",
                        "description": "This strategy tracks information of all the listed entities within the latest 'Entity Tracking Time Window' to determine new/updated entities. This strategy can pick entities having old timestamp that can be missed with 'Tracing Timestamps'. However additional DistributedMapCache controller service is required and more JVM heap memory is used. See the description of 'Entity Tracking Time Window' property for further details on how it works."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "Hostname": {
                  "name": "Hostname",
                  "displayName": "Hostname",
                  "description": "The fully qualified hostname or IP address of the remote system",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only"
                },
                "Port": {
                  "name": "Port",
                  "displayName": "Port",
                  "description": "The port to connect to on the remote host to fetch the data from",
                  "defaultValue": "21",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only"
                },
                "Username": {
                  "name": "Username",
                  "displayName": "Username",
                  "description": "Username",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only"
                },
                "Password": {
                  "name": "Password",
                  "displayName": "Password",
                  "description": "Password for the user account",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes"
                },
                "Remote Path": {
                  "name": "Remote Path",
                  "displayName": "Remote Path",
                  "description": "The path on the remote system from which to pull or push files",
                  "defaultValue": ".",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only"
                },
                "Distributed Cache Service": {
                  "name": "Distributed Cache Service",
                  "displayName": "Distributed Cache Service",
                  "description": "NOTE: This property is used merely for migration from old NiFi version before state management was introduced at version 0.5.0. The stored value in the cache service will be migrated into the state when this processor is started at the first time. The specified Controller Service was used to maintain state about what had been pulled from the remote server so that if a new node begins pulling data, it won't duplicate all of the work that has been done. If not specified, the information was not shared across the cluster. This property did not need to be set for standalone instances of NiFi but was supposed to be configured if NiFi had been running within a cluster.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.distributed.cache.client.DistributedMapCacheClient",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.8.0"
                  }
                },
                "Search Recursively": {
                  "name": "Search Recursively",
                  "displayName": "Search Recursively",
                  "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "File Filter Regex": {
                  "name": "File Filter Regex",
                  "displayName": "File Filter Regex",
                  "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "Path Filter Regex": {
                  "name": "Path Filter Regex",
                  "displayName": "Path Filter Regex",
                  "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "Ignore Dotted Files": {
                  "name": "Ignore Dotted Files",
                  "displayName": "Ignore Dotted Files",
                  "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "Remote Poll Batch Size": {
                  "name": "Remote Poll Batch Size",
                  "displayName": "Remote Poll Batch Size",
                  "description": "The value specifies how many file paths to find in a given directory on the remote system when doing a file listing. This value in general should not need to be modified but when polling against a remote system with a tremendous number of files this value can be critical.  Setting this value too high can result very poor performance and setting it too low can cause the flow to be slower than normal.",
                  "defaultValue": "5000",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Amount of time to wait before timing out while creating a connection",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "Data Timeout": {
                  "name": "Data Timeout",
                  "displayName": "Data Timeout",
                  "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "Connection Mode": {
                  "name": "Connection Mode",
                  "displayName": "Connection Mode",
                  "description": "The FTP Connection Mode",
                  "defaultValue": "Passive",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Active",
                        "value": "Active"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Passive",
                        "value": "Passive"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "Transfer Mode": {
                  "name": "Transfer Mode",
                  "displayName": "Transfer Mode",
                  "description": "The FTP Transfer Mode",
                  "defaultValue": "Binary",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Binary",
                        "value": "Binary"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ASCII",
                        "value": "ASCII"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "proxy-configuration-service": {
                  "name": "proxy-configuration-service",
                  "displayName": "Proxy Configuration Service",
                  "description": "Specifies the Proxy Configuration Controller Service to proxy network requests. If set, it supersedes proxy settings configured per component. Supported proxies: SOCKS, HTTP + AuthN",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.proxy.ProxyConfigurationService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.8.0"
                  }
                },
                "Proxy Type": {
                  "name": "Proxy Type",
                  "displayName": "Proxy Type",
                  "description": "Proxy type used for file transfers",
                  "defaultValue": "DIRECT",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "DIRECT",
                        "value": "DIRECT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "HTTP",
                        "value": "HTTP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SOCKS",
                        "value": "SOCKS"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "Proxy Host": {
                  "name": "Proxy Host",
                  "displayName": "Proxy Host",
                  "description": "The fully qualified hostname or IP address of the proxy server",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only"
                },
                "Proxy Port": {
                  "name": "Proxy Port",
                  "displayName": "Proxy Port",
                  "description": "The port of the proxy server",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only"
                },
                "Http Proxy Username": {
                  "name": "Http Proxy Username",
                  "displayName": "Http Proxy Username",
                  "description": "Http Proxy Username",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only"
                },
                "Http Proxy Password": {
                  "name": "Http Proxy Password",
                  "displayName": "Http Proxy Password",
                  "description": "Http Proxy Password",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only"
                },
                "Internal Buffer Size": {
                  "name": "Internal Buffer Size",
                  "displayName": "Internal Buffer Size",
                  "description": "Set the internal buffer size for buffered data streams",
                  "defaultValue": "16KB",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "target-system-timestamp-precision": {
                  "name": "target-system-timestamp-precision",
                  "displayName": "Target System Timestamp Precision",
                  "description": "Specify timestamp precision at the target system. Since this processor uses timestamp of entities to decide which should be listed, it is crucial to use the right timestamp precision.",
                  "defaultValue": "auto-detect",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Auto Detect",
                        "value": "auto-detect",
                        "description": "Automatically detect time unit deterministically based on candidate entries timestamp. Please note that this option may take longer to list entities unnecessarily, if none of entries has a precise precision timestamp. E.g. even if a target system supports millis, if all entries only have timestamps without millis, such as '2017-06-16 09:06:34.000', then its precision is determined as 'seconds'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Milliseconds",
                        "value": "millis",
                        "description": "This option provides the minimum latency for an entry from being available to being listed if target system supports millis, if not, use other options."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Seconds",
                        "value": "seconds",
                        "description": "For a target system that does not have millis precision, but has in seconds."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Minutes",
                        "value": "minutes",
                        "description": "For a target system that only supports precision in minutes."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                },
                "et-state-cache": {
                  "name": "et-state-cache",
                  "displayName": "Entity Tracking State Cache",
                  "description": "Listed entities are stored in the specified cache storage so that this processor can resume listing across NiFi restart or in case of primary node change. 'Tracking Entities' strategy require tracking information of all listed entities within the last 'Tracking Time Window'. To support large number of entities, the strategy uses DistributedMapCache instead of managed state. Cache key format is 'ListedEntities::{processorId}(::{nodeId})'. If it tracks per node listed entities, then the optional '::{nodeId}' part is added to manage state separately. E.g. cluster wide cache key = 'ListedEntities::8dda2321-0164-1000-50fa-3042fe7d6a7b', per node cache key = 'ListedEntities::8dda2321-0164-1000-50fa-3042fe7d6a7b::nifi-node3' The stored cache content is Gzipped JSON string. The cache key will be deleted when target listing configuration is changed. Used by 'Tracking Entities' strategy.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.distributed.cache.client.DistributedMapCacheClient",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.8.0"
                  }
                },
                "et-time-window": {
                  "name": "et-time-window",
                  "displayName": "Entity Tracking Time Window",
                  "description": "Specify how long this processor should track already-listed entities. 'Tracking Entities' strategy can pick any entity whose timestamp is inside the specified time window. For example, if set to '30 minutes', any entity having timestamp in recent 30 minutes will be the listing target when this processor runs. A listed entity is considered 'new/updated' and a FlowFile is emitted if one of following condition meets: 1. does not exist in the already-listed entities, 2. has newer timestamp than the cached entity, 3. has different size than the cached entity. If a cached entity's timestamp becomes older than specified time window, that entity will be removed from the cached already-listed entities. Used by 'Tracking Entities' strategy.",
                  "defaultValue": "3 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only"
                },
                "et-initial-listing-target": {
                  "name": "et-initial-listing-target",
                  "displayName": "Entity Tracking Initial Listing Target",
                  "description": "Specify how initial listing should be handled. Used by 'Tracking Entities' strategy.",
                  "defaultValue": "all",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Tracking Time Window",
                        "value": "window",
                        "description": "Ignore entities having timestamp older than the specified 'Tracking Time Window' at the initial listing activity."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "All Available",
                        "value": "all",
                        "description": "Regardless of entities timestamp, all existing entities will be listed at the initial listing activity."
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported"
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "PRIMARY",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [
              "'Hostname' is invalid because Hostname is required",
              "'Username' is invalid because Username is required",
              "'Relationship success' is invalid because Relationship 'success' is not connected to any component and is not auto-terminated"
            ],
            "validationStatus": "INVALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "ccc69044-0168-1000-93ed-04661d1fdc08",
            "id": "cdaf9153-0168-1000-9c14-f4f1f7784ad4",
            "name": "ListFTP",
            "runStatus": "Invalid",
            "statsLastRefreshed": "20:50:58 CET",
            "aggregateSnapshot": {
              "id": "cdaf9153-0168-1000-9c14-f4f1f7784ad4",
              "groupId": "ccc69044-0168-1000-93ed-04661d1fdc08",
              "name": "ListFTP",
              "type": "ListFTP",
              "runStatus": "Invalid",
              "executionNode": "PRIMARY",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        }
      ],
      "inputPorts": [],
      "outputPorts": [],
      "connections": [],
      "labels": [],
      "funnels": []
    },
    "lastRefreshed": "20:50:58 CET"
  }
}